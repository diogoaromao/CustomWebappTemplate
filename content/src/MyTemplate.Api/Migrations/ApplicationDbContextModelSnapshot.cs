// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyTemplate.Api.Common.Persistence;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MyTemplate.Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("MyTemplate")
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MyTemplate.Api.Common.Models.Cart", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("UserId");

                    b.ToTable("Carts", "MyTemplate");
                });

            modelBuilder.Entity("MyTemplate.Api.Common.Models.CartItem", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.HasKey("UserId", "ProductId");

                    b.ToTable("CartItems", "MyTemplate");
                });

            modelBuilder.Entity("MyTemplate.Api.Common.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Products", "MyTemplate");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 8, 22, 12, 16, 3, 726, DateTimeKind.Utc).AddTicks(2872),
                            Description = "A sample product",
                            Name = "Sample Product 1",
                            Price = 19.99m,
                            UpdatedAt = new DateTime(2025, 8, 22, 12, 16, 3, 726, DateTimeKind.Utc).AddTicks(2879)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 8, 24, 12, 16, 3, 726, DateTimeKind.Utc).AddTicks(2881),
                            Description = "Another sample product",
                            Name = "Sample Product 2",
                            Price = 29.99m,
                            UpdatedAt = new DateTime(2025, 8, 24, 12, 16, 3, 726, DateTimeKind.Utc).AddTicks(2882)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 8, 26, 12, 16, 3, 726, DateTimeKind.Utc).AddTicks(2883),
                            Description = "Yet another sample product",
                            Name = "Sample Product 3",
                            Price = 39.99m,
                            UpdatedAt = new DateTime(2025, 8, 26, 12, 16, 3, 726, DateTimeKind.Utc).AddTicks(2884)
                        });
                });

            modelBuilder.Entity("MyTemplate.Api.Common.Models.CartItem", b =>
                {
                    b.HasOne("MyTemplate.Api.Common.Models.Cart", null)
                        .WithMany("Items")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyTemplate.Api.Common.Models.Cart", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
